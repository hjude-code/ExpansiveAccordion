{"version":3,"file":"ExpContainer/render.js","mappings":";;;;AAAA,MAAMA,eAAe,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,iCAAiC,CAAC;AAEpF,SAASC,mBAAmBA,CAACC,cAAc,EAAC;EACxC,IAAIC,MAAM,GAAGD,cAAc,CAACE,qBAAqB,CAAC,CAAC,CAACC,KAAK;EACzD,IAAIC,MAAM,GAAGJ,cAAc,CAACE,qBAAqB,CAAC,CAAC,CAACG,MAAM;EAC1D,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,QAAQ,GAAG,CAAC;EAEhB,MAAMC,qBAAqB,GAAGR,cAAc,CAACF,gBAAgB,CAAC,2CAA2C,CAAC;EAC1GU,qBAAqB,CAACC,OAAO,CAAEC,WAAW,IAAG;IACzCJ,QAAQ,IAAII,WAAW,CAACR,qBAAqB,CAAC,CAAC,CAACC,KAAK;IACrDI,QAAQ,IAAIG,WAAW,CAACR,qBAAqB,CAAC,CAAC,CAACG,MAAM;EAC1D,CAAC,CAAC;EAEF,IAAIM,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACZ,MAAM,GAAGK,QAAQ,CAAC;EACjD,IAAIQ,aAAa,GAAGF,IAAI,CAACC,KAAK,CAACT,MAAM,GAAGG,QAAQ,CAAC;EAGjDP,cAAc,CAACe,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE,GAAGL,aAAa,IAAI,CAAC;EACzEX,cAAc,CAACe,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE,GAAGF,aAAa,IAAI,CAAC;AAC7E;AAEA,SAASG,yBAAyBA,CAACC,KAAK,EAAC;EACrC,MAAMC,YAAY,GAAGD,KAAK,CAACE,aAAa,CAAC,gBAAgB,CAAC;EAC1D,MAAMC,aAAa,GAAGF,YAAY,CAACjB,qBAAqB,CAAC,CAAC,CAACC,KAAK;EAChE,MAAMmB,aAAa,GAAGH,YAAY,CAACjB,qBAAqB,CAAC,CAAC,CAACG,MAAM;EAEjEa,KAAK,CAACH,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAEK,aAAa,GAAC,IAAI,CAAC;EAC9DH,KAAK,CAACH,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAEM,aAAa,GAAC,IAAI,CAAC;AAClE;AAEA1B,eAAe,CAACa,OAAO,CAAET,cAAc,IAAG;EACtC,MAAMuB,eAAe,GAAGvB,cAAc,CAACF,gBAAgB,CAAC,6BAA6B,CAAC;EAEtFC,mBAAmB,CAACC,cAAc,CAAC;EAEnC,IAAIwB,WAAW;EAEfD,eAAe,CAACd,OAAO,CAAES,KAAK,IAAG;IAC7BD,yBAAyB,CAACC,KAAK,CAAC;IAEhC,MAAMR,WAAW,GAAGQ,KAAK,CAACE,aAAa,CAAC,eAAe,CAAC;IACxDV,WAAW,CAACe,gBAAgB,CAAC,OAAO,EAAE,MAAI;MACtC,IAAGD,WAAW,IAAIA,WAAW,KAAKN,KAAK,EAAC;QACpCM,WAAW,CAACE,SAAS,CAACC,MAAM,CAAC,eAAe,CAAC;MACjD;MACAT,KAAK,CAACQ,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;MACvCJ,WAAW,GAAGN,KAAK;IACvB,CAAC,CAAC;EACN,CAAC,CAAC;AAEN,CAAC,CAAC;AAEFW,MAAM,CAACJ,gBAAgB,CAAC,QAAQ,EAAE,MAAI;EAClC7B,eAAe,CAACa,OAAO,CAAET,cAAc,IAAG;IACtCD,mBAAmB,CAACC,cAAc,CAAC;EACvC,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://expansiveaccorion/./src/ExpContainer/render.js"],"sourcesContent":["const accordionGroups = document.querySelectorAll('.wp-block-exp-acc-exp-container')\r\n\r\nfunction calculatePanelSizes(accordionGroup){\r\n    let groupW = accordionGroup.getBoundingClientRect().width\r\n    let groupH = accordionGroup.getBoundingClientRect().height\r\n    let headersW = 0\r\n    let headersH = 0\r\n\r\n    const accordionPanelHeaders = accordionGroup.querySelectorAll('.wp-block-exp-acc-exp-panel .panel-header')\r\n    accordionPanelHeaders.forEach((panelHeader)=>{\r\n        headersW += panelHeader.getBoundingClientRect().width\r\n        headersH += panelHeader.getBoundingClientRect().height\r\n    })\r\n\r\n    let availContentW = Math.round(groupW - headersW)\r\n    let availContentH = Math.round(groupH - headersH)\r\n\r\n\r\n    accordionGroup.style.setProperty('--availContentW', `${availContentW}px`)\r\n    accordionGroup.style.setProperty('--availContentH', `${availContentH}px`)\r\n}\r\n\r\nfunction calculatePanelContentSize(panel){\r\n    const panelContent = panel.querySelector('.panel-content')\r\n    const panelContentW = panelContent.getBoundingClientRect().width\r\n    const panelContentH = panelContent.getBoundingClientRect().height\r\n    \r\n    panel.style.setProperty('--panelContentW', panelContentW+\"px\")\r\n    panel.style.setProperty('--panelContentH', panelContentH+\"px\")\r\n}\r\n\r\naccordionGroups.forEach((accordionGroup)=>{\r\n    const accordionPanels = accordionGroup.querySelectorAll('.wp-block-exp-acc-exp-panel')\r\n\r\n    calculatePanelSizes(accordionGroup)\r\n\r\n    let activePanel\r\n\r\n    accordionPanels.forEach((panel)=>{\r\n        calculatePanelContentSize(panel)\r\n\r\n        const panelHeader = panel.querySelector('.panel-header')\r\n        panelHeader.addEventListener('click', ()=>{\r\n            if(activePanel && activePanel !== panel){\r\n                activePanel.classList.remove('is-panel-open')\r\n            }\r\n            panel.classList.toggle('is-panel-open')\r\n            activePanel = panel\r\n        })\r\n    })\r\n\r\n})\r\n\r\nwindow.addEventListener('resize', ()=>{\r\n    accordionGroups.forEach((accordionGroup)=>{\r\n        calculatePanelSizes(accordionGroup)\r\n    })\r\n})\r\n"],"names":["accordionGroups","document","querySelectorAll","calculatePanelSizes","accordionGroup","groupW","getBoundingClientRect","width","groupH","height","headersW","headersH","accordionPanelHeaders","forEach","panelHeader","availContentW","Math","round","availContentH","style","setProperty","calculatePanelContentSize","panel","panelContent","querySelector","panelContentW","panelContentH","accordionPanels","activePanel","addEventListener","classList","remove","toggle","window"],"sourceRoot":""}